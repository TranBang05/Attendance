// <auto-generated />
using System;
using AttendanceApi.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AttendanceApi.Migrations
{
    [DbContext(typeof(AttendanceContext))]
    [Migration("20240617094454_db")]
    partial class db
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.31")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AttendanceApi.Models.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("SubjectId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SubjectId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "PRN231_SE1705",
                            EndDate = new DateTime(2024, 9, 17, 16, 44, 53, 203, DateTimeKind.Local).AddTicks(8985),
                            Name = "Building Cross-Platform Back-End ",
                            StartDate = new DateTime(2024, 6, 17, 16, 44, 53, 203, DateTimeKind.Local).AddTicks(8970),
                            SubjectId = 1
                        },
                        new
                        {
                            Id = 2,
                            Code = "PRN231_SE1706",
                            EndDate = new DateTime(2024, 9, 17, 16, 44, 53, 203, DateTimeKind.Local).AddTicks(8994),
                            Name = "Building Cross-Platform Back-End ",
                            StartDate = new DateTime(2024, 6, 17, 16, 44, 53, 203, DateTimeKind.Local).AddTicks(8992),
                            SubjectId = 1
                        });
                });

            modelBuilder.Entity("AttendanceApi.Models.Permission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Permissions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "View"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Edit"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Create"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Delete"
                        });
                });

            modelBuilder.Entity("AttendanceApi.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Teacher"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Student"
                        });
                });

            modelBuilder.Entity("AttendanceApi.Models.RolePermission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("PermissionId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PermissionId");

                    b.HasIndex("RoleId");

                    b.ToTable("RolePermissions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PermissionId = 1,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 2,
                            PermissionId = 2,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 3,
                            PermissionId = 3,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 4,
                            PermissionId = 4,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 5,
                            PermissionId = 1,
                            RoleId = 2
                        },
                        new
                        {
                            Id = 6,
                            PermissionId = 3,
                            RoleId = 2
                        });
                });

            modelBuilder.Entity("AttendanceApi.Models.Schedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CourseId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Slot")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TeacherId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("TeacherId");

                    b.ToTable("Schedules");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CourseId = 1,
                            Date = new DateTime(2024, 6, 17, 16, 44, 53, 203, DateTimeKind.Local).AddTicks(9078),
                            Slot = "A24",
                            TeacherId = 1
                        },
                        new
                        {
                            Id = 2,
                            CourseId = 2,
                            Date = new DateTime(2024, 6, 18, 16, 44, 53, 203, DateTimeKind.Local).AddTicks(9082),
                            Slot = "A35",
                            TeacherId = 1
                        });
                });

            modelBuilder.Entity("AttendanceApi.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mssv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "bangtx@example.com",
                            Mssv = "HE163986",
                            Name = "Tran Xuan Bang",
                            Password = "bang0501@bb"
                        },
                        new
                        {
                            Id = 2,
                            Email = "tiennv@example.com",
                            Mssv = "HE163087",
                            Name = "Nguyen Van Tien",
                            Password = "1223"
                        },
                        new
                        {
                            Id = 3,
                            Email = "huyvg@example.com",
                            Mssv = "HE163188",
                            Name = "Vu Gia Huy",
                            Password = "111"
                        },
                        new
                        {
                            Id = 4,
                            Email = "longnh@example.com",
                            Mssv = "HE163389",
                            Name = "Nguyen Huy Long",
                            Password = "111"
                        },
                        new
                        {
                            Id = 5,
                            Email = "ducdn@example.com",
                            Mssv = "SHE163966",
                            Name = "Do Ngoc Duc",
                            Password = "111"
                        });
                });

            modelBuilder.Entity("AttendanceApi.Models.StudentCourse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CourseId")
                        .HasColumnType("int");

                    b.Property<int?>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentCourses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CourseId = 1,
                            StudentId = 1
                        },
                        new
                        {
                            Id = 2,
                            CourseId = 1,
                            StudentId = 2
                        },
                        new
                        {
                            Id = 3,
                            CourseId = 1,
                            StudentId = 3
                        },
                        new
                        {
                            Id = 4,
                            CourseId = 2,
                            StudentId = 4
                        },
                        new
                        {
                            Id = 5,
                            CourseId = 2,
                            StudentId = 5
                        });
                });

            modelBuilder.Entity("AttendanceApi.Models.StudentRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentRoles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            RoleId = 1,
                            StudentId = 1
                        },
                        new
                        {
                            Id = 2,
                            RoleId = 2,
                            StudentId = 2
                        },
                        new
                        {
                            Id = 3,
                            RoleId = 3,
                            StudentId = 3
                        },
                        new
                        {
                            Id = 4,
                            RoleId = 3,
                            StudentId = 4
                        },
                        new
                        {
                            Id = 5,
                            RoleId = 3,
                            StudentId = 5
                        });
                });

            modelBuilder.Entity("AttendanceApi.Models.StudentSchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ScheduleId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ScheduleId");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentSchedules");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ScheduleId = 1,
                            Status = 1,
                            StudentId = 1
                        },
                        new
                        {
                            Id = 2,
                            ScheduleId = 1,
                            Status = 0,
                            StudentId = 2
                        },
                        new
                        {
                            Id = 3,
                            ScheduleId = 1,
                            Status = 1,
                            StudentId = 3
                        },
                        new
                        {
                            Id = 4,
                            ScheduleId = 2,
                            Status = 0,
                            StudentId = 4
                        },
                        new
                        {
                            Id = 5,
                            ScheduleId = 2,
                            Status = 0,
                            StudentId = 5
                        });
                });

            modelBuilder.Entity("AttendanceApi.Models.Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NumberSlot")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Subjects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "PRN231",
                            Name = "Building Cross-Platform Back-End Application With .NET",
                            NumberSlot = 20
                        },
                        new
                        {
                            Id = 2,
                            Code = "EXE121",
                            Name = "Experiential Entrepreneurship 2",
                            NumberSlot = 20
                        },
                        new
                        {
                            Id = 3,
                            Code = "PRM231",
                            Name = "Mobile Programming",
                            NumberSlot = 20
                        },
                        new
                        {
                            Id = 4,
                            Code = "MLN111",
                            Name = "Philosophy of Marxism – Leninism",
                            NumberSlot = 20
                        },
                        new
                        {
                            Id = 5,
                            Code = "WDU102",
                            Name = "UI/UX Design",
                            NumberSlot = 20
                        });
                });

            modelBuilder.Entity("AttendanceApi.Models.Teacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Teachers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "ChiLp"
                        },
                        new
                        {
                            Id = 2,
                            Name = "AnhLH75"
                        },
                        new
                        {
                            Id = 3,
                            Name = "LoanBT7"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Khuyendtv"
                        },
                        new
                        {
                            Id = 5,
                            Name = "TienTd"
                        });
                });

            modelBuilder.Entity("AttendanceApi.Models.Course", b =>
                {
                    b.HasOne("AttendanceApi.Models.Subject", "Subject")
                        .WithMany("Courses")
                        .HasForeignKey("SubjectId");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("AttendanceApi.Models.RolePermission", b =>
                {
                    b.HasOne("AttendanceApi.Models.Permission", "Permission")
                        .WithMany("RolePermissions")
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AttendanceApi.Models.Role", "Role")
                        .WithMany("RolePermissions")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permission");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("AttendanceApi.Models.Schedule", b =>
                {
                    b.HasOne("AttendanceApi.Models.Course", "Course")
                        .WithMany("Schedules")
                        .HasForeignKey("CourseId");

                    b.HasOne("AttendanceApi.Models.Teacher", "Teacher")
                        .WithMany("Schedules")
                        .HasForeignKey("TeacherId");

                    b.Navigation("Course");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("AttendanceApi.Models.StudentCourse", b =>
                {
                    b.HasOne("AttendanceApi.Models.Course", "Course")
                        .WithMany("StudentCourses")
                        .HasForeignKey("CourseId");

                    b.HasOne("AttendanceApi.Models.Student", "Student")
                        .WithMany("StudentCourses")
                        .HasForeignKey("StudentId");

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("AttendanceApi.Models.StudentRole", b =>
                {
                    b.HasOne("AttendanceApi.Models.Role", "Role")
                        .WithMany("StudentRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AttendanceApi.Models.Student", "Student")
                        .WithMany("StudentRoles")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("AttendanceApi.Models.StudentSchedule", b =>
                {
                    b.HasOne("AttendanceApi.Models.Schedule", "Schedule")
                        .WithMany("StudentSchedules")
                        .HasForeignKey("ScheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AttendanceApi.Models.Student", "Student")
                        .WithMany("StudentSchedules")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Schedule");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("AttendanceApi.Models.Course", b =>
                {
                    b.Navigation("Schedules");

                    b.Navigation("StudentCourses");
                });

            modelBuilder.Entity("AttendanceApi.Models.Permission", b =>
                {
                    b.Navigation("RolePermissions");
                });

            modelBuilder.Entity("AttendanceApi.Models.Role", b =>
                {
                    b.Navigation("RolePermissions");

                    b.Navigation("StudentRoles");
                });

            modelBuilder.Entity("AttendanceApi.Models.Schedule", b =>
                {
                    b.Navigation("StudentSchedules");
                });

            modelBuilder.Entity("AttendanceApi.Models.Student", b =>
                {
                    b.Navigation("StudentCourses");

                    b.Navigation("StudentRoles");

                    b.Navigation("StudentSchedules");
                });

            modelBuilder.Entity("AttendanceApi.Models.Subject", b =>
                {
                    b.Navigation("Courses");
                });

            modelBuilder.Entity("AttendanceApi.Models.Teacher", b =>
                {
                    b.Navigation("Schedules");
                });
#pragma warning restore 612, 618
        }
    }
}
